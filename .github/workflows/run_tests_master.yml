# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# pandapipes-master branch is designed to work with pandapower-master branch

name: ppipes_master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        os:  [ ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .["all"]
        shell: bash
      - name: List all installed packages
        run: |
          python -m pip list
      - name: Test with pytest
        if: ${{ matrix.python-version != '3.11' }}
        run: |
          python -m pytest
      - name: Test with pytest, Codecov and Coverage
        if: ${{ matrix.python-version == '3.11' }}
        run: |
          python -m pip install pytest-cov
          python -m pytest --nbmake -n=auto --cov=./ --cov-report=xml
          cp ./coverage.xml ./codecov_coverage.xml
      - name: Upload coverage to Codacy
        if: ${{ matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'}}
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml
      - name: Upload coverage to Codecov
        if: ${{ matrix.python-version == '3.11' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./codecov_coverage.xml
          verbose: true
          exclude: |
            '**/test/**'
            '**/__init__.py'
            'doc/**'
            'tutorials/**'
            'pandapipes/networks/network_files/**'
            '**.yml'
            '**.rst'
      - name: Test without numba
        if: ${{ matrix.python-version == '3.11' }}
        run: |
          python -m pip uninstall numba -y
          python -m pytest -n=auto


  relying:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        os:  [ ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .["all"]
        shell: bash
      - name: List all installed packages
        run: |
          python -m pip list
      - name: Test with pytest
        # if: ${{ matrix.python-version != '3.11' }}
        run: |
          python -m pytest -n=auto
      - name: Test without numba
        if: ${{ matrix.python-version == '3.11' }}
        run: |
          python -m pip uninstall numba -y
          python -m pytest -n=auto

  tutorial_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        os:  [ ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .["all"]
        shell: bash
      - name: List all installed packages
        run: |
          python -m pip list
      - name: Test with pytest
        run: |
          python -m pytest --nbmake -n=auto "./tutorials"
      - name: Test without numba
        if: ${{ matrix.python-version == '3.11' }}
        run: |
          python -m pip uninstall numba -y
          python -m pytest --nbmake -n=auto "./tutorials"


  docs_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.11' ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check docs for Python ${{ matrix.python-version }}
        uses: e2nIEE/sphinx-action@master
        with:
          pre-build-command: "apt-get update -y && apt-get install -y git;
                              git --version;
                              python -m pip install --upgrade pip;
                              python -m pip install .[docs]"
          build-command: "sphinx-build -b html source _build -W"
          docs-folder: "doc/"
